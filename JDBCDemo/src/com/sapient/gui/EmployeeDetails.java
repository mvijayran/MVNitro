/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.sapient.gui;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

import javax.swing.JOptionPane;

import oracle.jdbc.driver.DBConversion;



/**
 *
 * @author mku106
 */
public class EmployeeDetails extends javax.swing.JFrame {

    /**
     * Creates new form EmployeeDetails
     */
    public EmployeeDetails() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        employeeDetails = new javax.swing.JLabel();
        lastName = new javax.swing.JLabel();
        salary = new javax.swing.JLabel();
        salaryField = new javax.swing.JTextField();
        lastNameField = new javax.swing.JTextField();
        employeIDfield = new javax.swing.JTextField();
        modify = new javax.swing.JButton();
        insert = new javax.swing.JButton();
        exit = new javax.swing.JButton();
        find = new javax.swing.JButton();
        firstName = new javax.swing.JLabel();
        firstNameField = new javax.swing.JTextField();
        remove = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 146, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        employeeDetails.setText("Employee ID");

        lastName.setText("Last Name");

        salary.setText("Salary");

        salaryField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salaryFieldActionPerformed(evt);
            }
        });

        lastNameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lastNameFieldActionPerformed(evt);
            }
        });

        employeIDfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                employeIDfieldActionPerformed(evt);
            }
        });

        modify.setText("modify");
        modify.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modifyActionPerformed(evt);
            }
        });

        insert.setText("Insert");
        insert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertActionPerformed(evt);
            }
        });

        exit.setText("exit");
        exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitActionPerformed(evt);
            }
        });

        find.setText("find");
        find.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                findActionPerformed(evt);
            }
        });

        firstName.setText("First Name");

        remove.setText("remove");
        remove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(find)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(lastName)
                                .addComponent(employeeDetails, javax.swing.GroupLayout.Alignment.TRAILING))
                            .addComponent(firstName)
                            .addComponent(salary))
                        .addGap(87, 87, 87)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lastNameField, javax.swing.GroupLayout.DEFAULT_SIZE, 81, Short.MAX_VALUE)
                            .addComponent(salaryField)
                            .addComponent(employeIDfield)
                            .addComponent(firstNameField)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(modify)
                        .addGap(54, 54, 54)
                        .addComponent(insert)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(remove)
                    .addComponent(exit)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(116, 116, 116))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(31, 31, 31)
                                .addComponent(employeIDfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(30, 30, 30)
                                .addComponent(employeeDetails)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(firstName))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(4, 4, 4)
                                .addComponent(firstNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lastName)
                            .addComponent(lastNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(7, 7, 7)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(salaryField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(salary))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 59, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(modify)
                    .addComponent(insert)
                    .addComponent(exit)
                    .addComponent(find))
                .addGap(37, 37, 37)
                .addComponent(remove)
                .addGap(22, 22, 22))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void insertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertActionPerformed
        // TODO add your handling code here:
    	
    	Connection dbConnection=null;
    	PreparedStatement pStatement=null;
    	ResultSet result=null;
    	Statement stmt = null;
    	int id;
    	String sql;
    	try{
    	DriverManager.registerDriver(new oracle.jdbc.driver.OracleDriver());
    	
    	 dbConnection = DriverManager.getConnection("jdbc:oracle:thin:@deltahiti31202:1521:XE", "mohit", "mohit123");
    	
    	// pStatement=  dbConnection.prepareStatement("SELECT EMPLOYEE_ID, FIRST_NAME,LAST_NAME,SALARY FROM EMPLOYEES WHERE EMPLOYEE_ID= ?");
    	
    //	id= Integer.parseInt(employeIDfield.getText());
    	 
    	 
    	// sql= "INSERT INTO EMPLOYEES" + "VALUES("+ employeIDfield.getText()+", '"+firstNameField.getText()+"', '"+ lastNameField.getText()+"', "+salaryField.getText()+")";
    	 pStatement=dbConnection.prepareStatement("INSERT INTO EMPLOYEES(EMPLOYEE_ID,FIRST_NAME,LAST_NAME,SALARY) VALUES(?,?,?,?)");
    	 pStatement.setInt(1, Integer.parseInt(employeIDfield.getText()));
    	 pStatement.setString(2,firstNameField.getText() );
    	 pStatement.setString(3,lastNameField.getText() );
    	 pStatement.setDouble(4, Double.parseDouble(salaryField.getText()) );
    	 
    	if(pStatement.executeUpdate()==1){
    	JOptionPane.showMessageDialog(this, "record inserted");
    	}
    	else{
    		JOptionPane.showMessageDialog(this, "record can't be  inserted");
    		
    	}
    	// result= pStatement.executeQuery();
    	/*
    	if(result.next()){
    		firstNameField.setText(result.getString(2));
    		lastNameField.setText(result.getString(3));
    		salaryField.setText(result.getString(4));
    	}
    	else{
    		JOptionPane.showMessageDialog(this, "No Record found, employee not exists");
    	}*/
    	
    	
    	}
    	
    	
    	
    	catch(SQLException e)
    	{
    		e.printStackTrace();
    	}
    	
    	
    	finally{
    		try{
    			if(dbConnection!=null && !dbConnection.isClosed()){
    				dbConnection.close();
    			}
    			if(pStatement!=null){
    				pStatement.close();
    			}
    			
    		}
    		catch(Exception e){
    			e.printStackTrace();
    		}
    	}
    	
    	
    }//GEN-LAST:event_insertActionPerformed

    private void employeIDfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_employeIDfieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_employeIDfieldActionPerformed

    private void findActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_findActionPerformed
        // TODO add your handling code here:
    	Connection dbConnection=null;
    	PreparedStatement pStatement=null;
    	ResultSet result=null;
    	try{
    	DriverManager.registerDriver(new oracle.jdbc.driver.OracleDriver());
    	
    	 dbConnection = DriverManager.getConnection("jdbc:oracle:thin:@deltahiti31202:1521:XE", "mohit", "mohit123");
    	
    	 pStatement=  dbConnection.prepareStatement("SELECT EMPLOYEE_ID, FIRST_NAME,LAST_NAME,SALARY FROM EMPLOYEES WHERE EMPLOYEE_ID= ?");
    	
    	pStatement.setInt(1, Integer.parseInt(employeIDfield.getText()));
    	
    	 result= pStatement.executeQuery();
    	
    	if(result.next()){
    		firstNameField.setText(result.getString(2));
    		lastNameField.setText(result.getString(3));
    		salaryField.setText(result.getString(4));
    	}
    	else{
    		JOptionPane.showMessageDialog(this, "No Record found, employee not exists");
    	}
    	
    	
    	}
    	
    	
    	
    	catch(SQLException e)
    	{
    		e.printStackTrace();
    	}
    	
    	
    	finally{
    		try{
    			if(dbConnection!=null && !dbConnection.isClosed()){
    				dbConnection.close();
    			}
    			if(pStatement!=null){
    				pStatement.close();
    			}
    			if(result!=null){
    				result.close();
    			}
    		}
    		catch(Exception e){
    			e.printStackTrace();
    		}
    	}
    	
    	
    	
    }//GEN-LAST:event_findActionPerformed

    private void exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_exitActionPerformed

    private void lastNameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lastNameFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_lastNameFieldActionPerformed

    private void salaryFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salaryFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_salaryFieldActionPerformed

    private void removeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeActionPerformed
        // TODO add your handling code here:
    	
    	Connection dbConnection=null;
    	PreparedStatement pStatement=null;
    	
    	Statement stmt = null;
    	
    	try{
    	DriverManager.registerDriver(new oracle.jdbc.driver.OracleDriver());
    	
    	 dbConnection = DriverManager.getConnection("jdbc:oracle:thin:@deltahiti31202:1521:XE", "mohit", "mohit123");
    	
    	// pStatement=  dbConnection.prepareStatement("SELECT EMPLOYEE_ID, FIRST_NAME,LAST_NAME,SALARY FROM EMPLOYEES WHERE EMPLOYEE_ID= ?");
    	
    //	id= Integer.parseInt(employeIDfield.getText());
    	 
    	 
    	// sql= "INSERT INTO EMPLOYEES" + "VALUES("+ employeIDfield.getText()+", '"+firstNameField.getText()+"', '"+ lastNameField.getText()+"', "+salaryField.getText()+")";
    	 pStatement=dbConnection.prepareStatement("DELETE FROM EMPLOYEES WHERE EMPLOYEE_ID= ?");
    	 pStatement.setInt(1, Integer.parseInt(employeIDfield.getText()));
    	// pStatement.setString(2,firstNameField.getText() );
    	// pStatement.setString(3,lastNameField.getText() );
    	// pStatement.setDouble(4, Double.parseDouble(salaryField.getText()) );
    	 
    	if(pStatement.executeUpdate()==1){
    	JOptionPane.showMessageDialog(this, "record DELETED");
    	}
    	else{
    		JOptionPane.showMessageDialog(this, "record can't be  DELETED");
    		
    	}
    	// result= pStatement.executeQuery();
    	/*
    	if(result.next()){
    		firstNameField.setText(result.getString(2));
    		lastNameField.setText(result.getString(3));
    		salaryField.setText(result.getString(4));
    	}
    	else{
    		JOptionPane.showMessageDialog(this, "No Record found, employee not exists");
    	}*/
    	
    	
    	}
    	
    	
    	
    	catch(SQLException e)
    	{
    		e.printStackTrace();
    	}
    	
    	
    	finally{
    		try{
    			if(dbConnection!=null && !dbConnection.isClosed()){
    				dbConnection.close();
    			}
    			if(pStatement!=null){
    				pStatement.close();
    			}
    			
    		}
    		catch(Exception e){
    			e.printStackTrace();
    		}
    	}
    	
    	
    	
    	
    }//GEN-LAST:event_removeActionPerformed

    private void modifyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modifyActionPerformed
        // TODO add your handling code here:
    	
    	Connection dbConnection=null;
    	PreparedStatement pStatement=null;
    	ResultSet result=null;
    	Statement stmt = null;
    	//int id;
    	//String sql;
    	try{
    	DriverManager.registerDriver(new oracle.jdbc.driver.OracleDriver());
    	
    	 dbConnection = DriverManager.getConnection("jdbc:oracle:thin:@deltahiti31202:1521:XE", "mohit", "mohit123");
    	
    	// pStatement=  dbConnection.prepareStatement("SELECT EMPLOYEE_ID, FIRST_NAME,LAST_NAME,SALARY FROM EMPLOYEES WHERE EMPLOYEE_ID= ?");
    	
    //	id= Integer.parseInt(employeIDfield.getText());
    	 
    	 
    	// sql= "INSERT INTO EMPLOYEES" + "VALUES("+ employeIDfield.getText()+", '"+firstNameField.getText()+"', '"+ lastNameField.getText()+"', "+salaryField.getText()+")";
    	 pStatement=dbConnection.prepareStatement("UPDATE EMPLOYEES SET FIRST_NAME = ?, LAST_NAME=?, SALARY= ? WHERE EMPLOYEE_ID=?");
    	 pStatement.setInt(4, Integer.parseInt(employeIDfield.getText()));
    	 pStatement.setString(1,firstNameField.getText() );
    	 pStatement.setString(2,lastNameField.getText() );
    	 pStatement.setDouble(3, Double.parseDouble(salaryField.getText()) );
    	 
    	if(pStatement.executeUpdate()==1){
    	JOptionPane.showMessageDialog(this, "record UPDATED");
    	}
    	else{
    		JOptionPane.showMessageDialog(this, "record can't be  UPDATED");
    		
    	}
    	// result= pStatement.executeQuery();
    	/*
    	if(result.next()){
    		firstNameField.setText(result.getString(2));
    		lastNameField.setText(result.getString(3));
    		salaryField.setText(result.getString(4));
    	}
    	else{
    		JOptionPane.showMessageDialog(this, "No Record found, employee not exists");
    	}*/
    	
    	
    	}
    	
    	
    	
    	catch(SQLException e)
    	{
    		e.printStackTrace();
    	}
    	
    	
    	finally{
    		try{
    			if(dbConnection!=null && !dbConnection.isClosed()){
    				dbConnection.close();
    			}
    			if(pStatement!=null){
    				pStatement.close();
    			}
    			
    		}
    		catch(Exception e){
    			e.printStackTrace();
    		}
    	}
    	
    	
    }//GEN-LAST:event_modifyActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EmployeeDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EmployeeDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EmployeeDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EmployeeDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EmployeeDetails().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField employeIDfield;
    private javax.swing.JLabel employeeDetails;
    private javax.swing.JButton exit;
    private javax.swing.JButton find;
    private javax.swing.JLabel firstName;
    private javax.swing.JTextField firstNameField;
    private javax.swing.JButton insert;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lastName;
    private javax.swing.JTextField lastNameField;
    private javax.swing.JButton modify;
    private javax.swing.JButton remove;
    private javax.swing.JLabel salary;
    private javax.swing.JTextField salaryField;
    // End of variables declaration//GEN-END:variables
}
